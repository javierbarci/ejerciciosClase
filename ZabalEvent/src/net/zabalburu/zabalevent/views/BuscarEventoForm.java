/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package net.zabalburu.zabalevent.views;

import java.awt.Component;
import java.awt.Image;
import java.util.List;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTree;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.TreeCellRenderer;
import javax.swing.tree.TreePath;
import jiconfont.icons.FontAwesome;
import jiconfont.swing.IconFontSwing;
import net.zabalburu.zabalevent.modelo.Categoria;
import net.zabalburu.zabalevent.modelo.Evento;
import net.zabalburu.zabalevent.modelo.Lugar;
import net.zabalburu.zabalevent.modelo.Usuario;
import net.zabalburu.zabalevent.service.ZabalEventService;

/**
 *
 * @author Iñigo
 */
public class BuscarEventoForm extends javax.swing.JFrame {

    private ZabalEventService service = new ZabalEventService();
    private DefaultMutableTreeNode trRaiz;
    private Usuario usuario;

    /**
     * Creates new form BuscarEventoForm
     */
    public BuscarEventoForm(Usuario u) {
        this.usuario = u;
        crearArbolCategorias();
        initComponents();
        treCategorias.setCellRenderer(new EventosRenderer());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pnlTitulo = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        pnlBotones = new javax.swing.JPanel();
        btnApuntarse = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        pnlEvento = new javax.swing.JSplitPane();
        pnlCategorias = new javax.swing.JPanel();
        jspCategorias = new javax.swing.JScrollPane();
        treCategorias = new JTree(trRaiz);
        pnlDatos = new javax.swing.JPanel();
        lblFotoUsuario = new javax.swing.JLabel();
        txtTitulo = new javax.swing.JTextField();
        lblFotoEvento = new javax.swing.JLabel();
        lblFecha = new javax.swing.JLabel();
        //PreCreation

        ftxFecha = new javax.swing.JFormattedTextField(dfFecha);
        //PostCreation
        jspDescripción = new javax.swing.JScrollPane();
        txaDescripción = new javax.swing.JTextArea();
        lblLugar = new javax.swing.JLabel();
        jspLugar = new javax.swing.JScrollPane();
        txaLugar = new javax.swing.JTextArea();
        lblFotoLugar = new javax.swing.JLabel();
        lblPrecio = new javax.swing.JLabel();
        ftxPrecio = new javax.swing.JFormattedTextField();
        lblIdEvento = new javax.swing.JLabel();
        jspUsuarios = new javax.swing.JScrollPane();
        tblUsuarios = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Buscar Evento");

        pnlTitulo.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblTitulo.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        lblTitulo.setText("Buscar Evento");
        pnlTitulo.add(lblTitulo);

        getContentPane().add(pnlTitulo, java.awt.BorderLayout.PAGE_START);

        pnlBotones.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnApuntarse.setText("Apuntarse");
        btnApuntarse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApuntarseActionPerformed(evt);
            }
        });
        pnlBotones.add(btnApuntarse);

        btnSalir.setMnemonic('S');
        btnSalir.setText("Salir");
        btnSalir.setToolTipText("Finaliza la aplicación");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        pnlBotones.add(btnSalir);

        getContentPane().add(pnlBotones, java.awt.BorderLayout.SOUTH);

        pnlEvento.setDividerLocation(150);
        pnlEvento.setToolTipText("");
        pnlEvento.setOneTouchExpandable(true);

        pnlCategorias.setLayout(new javax.swing.BoxLayout(pnlCategorias, javax.swing.BoxLayout.LINE_AXIS));

        treCategorias.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                seleccionCategoria(evt);
            }
        });
        jspCategorias.setViewportView(treCategorias);

        pnlCategorias.add(jspCategorias);

        pnlEvento.setLeftComponent(pnlCategorias);

        pnlDatos.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        pnlDatos.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.05;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(lblFotoUsuario, gridBagConstraints);

        txtTitulo.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.6;
        gridBagConstraints.weighty = 0.05;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(txtTitulo, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(lblFotoEvento, gridBagConstraints);

        lblFecha.setText("Fecha");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.05;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(lblFecha, gridBagConstraints);

        //PreInit
        ftxFecha.setEditable(false);
        //Postinit
        ftxFecha.setValue(new java.util.Date());
        //PostListeners
        //Pre-Adding
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weighty = 0.05;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(ftxFecha, gridBagConstraints);
        //Post-Adding
        //After-All-Set

        txaDescripción.setEditable(false);
        txaDescripción.setColumns(20);
        txaDescripción.setLineWrap(true);
        txaDescripción.setRows(5);
        txaDescripción.setWrapStyleWord(true);
        jspDescripción.setViewportView(txaDescripción);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weighty = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(jspDescripción, gridBagConstraints);

        lblLugar.setText("Lugar");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(lblLugar, gridBagConstraints);

        txaLugar.setEditable(false);
        txaLugar.setColumns(20);
        txaLugar.setRows(5);
        jspLugar.setViewportView(txaLugar);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(jspLugar, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(lblFotoLugar, gridBagConstraints);

        lblPrecio.setText("Precio");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.05;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(lblPrecio, gridBagConstraints);

        ftxPrecio.setEditable(false);
        ftxPrecio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getCurrencyInstance())));
        ftxPrecio.setValue(0.0);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weighty = 0.05;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(ftxPrecio, gridBagConstraints);
        pnlDatos.add(lblIdEvento, new java.awt.GridBagConstraints());

        tblUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jspUsuarios.setViewportView(tblUsuarios);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weighty = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(jspUsuarios, gridBagConstraints);

        jLabel1.setText("Usuarios Apuntados al Evento");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weighty = 0.05;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(jLabel1, gridBagConstraints);

        pnlEvento.setRightComponent(pnlDatos);

        getContentPane().add(pnlEvento, java.awt.BorderLayout.CENTER);

        setSize(new java.awt.Dimension(797, 589));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void seleccionCategoria(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_seleccionCategoria
        TreePath path = evt.getPath();
        if (path.getPathCount() == 3) {
            DefaultMutableTreeNode treEvento = (DefaultMutableTreeNode) path.getLastPathComponent();
            //DefaultMutableTreeNode dmt = (DefaultMutableTreeNode) path.getPathComponent(2);
            Evento e = (Evento) treEvento.getUserObject();
            mostrarEvento(e);
        }
    }//GEN-LAST:event_seleccionCategoria

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.dispose();
        new MainForm(usuario);
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnApuntarseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApuntarseActionPerformed
        /*TreePath tp =treCategorias.getSelectionPath();
        DefaultMutableTreeNode trEvento = (DefaultMutableTreeNode) tp.getLastPathComponent();
        Evento e = (Evento) trEvento.getUserObject();*/
        if (lblIdEvento.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this,
                    "Debes seleccionar un evento primero");
        } else {
            int idEvento = Integer.parseInt(lblIdEvento.getText());
            service.apuntarAEvento(idEvento,
                    usuario.getIdUsuario());
            JOptionPane.showMessageDialog(this,
                    "Te has apuntado al evento!!");
        }
    }//GEN-LAST:event_btnApuntarseActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApuntarse;
    private javax.swing.JButton btnSalir;
    //Pre-Creation
    private java.text.DateFormat dfFecha = java.text.DateFormat.getDateInstance();
    private javax.swing.JFormattedTextField ftxFecha;
    //Post-Creation
    private javax.swing.JFormattedTextField ftxPrecio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jspCategorias;
    private javax.swing.JScrollPane jspDescripción;
    private javax.swing.JScrollPane jspLugar;
    private javax.swing.JScrollPane jspUsuarios;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JLabel lblFotoEvento;
    private javax.swing.JLabel lblFotoLugar;
    private javax.swing.JLabel lblFotoUsuario;
    private javax.swing.JLabel lblIdEvento;
    private javax.swing.JLabel lblLugar;
    private javax.swing.JLabel lblPrecio;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JPanel pnlBotones;
    private javax.swing.JPanel pnlCategorias;
    private javax.swing.JPanel pnlDatos;
    private javax.swing.JSplitPane pnlEvento;
    private javax.swing.JPanel pnlTitulo;
    private javax.swing.JTable tblUsuarios;
    private javax.swing.JTree treCategorias;
    private javax.swing.JTextArea txaDescripción;
    private javax.swing.JTextArea txaLugar;
    private javax.swing.JTextField txtTitulo;
    // End of variables declaration//GEN-END:variables

    private void crearArbolCategorias() {
        trRaiz = new DefaultMutableTreeNode("Categorias");
        for (Categoria c : service.getCategorias()) {
            DefaultMutableTreeNode trCat = new DefaultMutableTreeNode(c);
            for (Evento e : service.getEventosCategoria(c.getIdCategoria())) {
                DefaultMutableTreeNode trEvento = new DefaultMutableTreeNode(e);
                trCat.add(trEvento);
            }
            trRaiz.add(trCat);
        }
    }

    private void mostrarEvento(Evento e) {
        lblIdEvento.setText(String.valueOf(e.getIdEvento()));
        lblIdEvento.setVisible(false);
        Usuario u = service.getUsuario(e.getIdUsuario());
        ImageIcon imIc = new ImageIcon("imagenes/" + u.getFoto());
        Image imag = imIc.getImage()
                .getScaledInstance(40, 40, Image.SCALE_SMOOTH);
        imIc.setImage(imag);
        lblFotoUsuario.setIcon(imIc);
        txtTitulo.setText(e.getTitulo());
        ftxFecha.setValue(e.getFecha());
        imIc = new ImageIcon("imagenes/eventos/" + e.getFoto());
        imag = imIc.getImage()
                .getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        imIc.setImage(imag);
        lblFotoEvento.setIcon(imIc);
        txaDescripción.setText(e.getDescripcion());
        txaDescripción.setCaretPosition(0);
        Lugar l = service.getLugar(e.getIdLugar());
        txaLugar.setText(l.getNombre()
                + "\n" + l.getDireccion()
                + "\n" + l.getLocalidad());
        imIc = new ImageIcon("imagenes/lugares/" + l.getFoto());
        imag = imIc.getImage()
                .getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        imIc.setImage(imag);
        lblFotoLugar.setIcon(imIc);
        ftxPrecio.setValue(e.getPrecio());
        cargarUsuariosEvento(e);
    }

    private void cargarUsuariosEvento(Evento e) {
        String[] titulos = {"Nombre", "Email"};
        List<Usuario> usuarios = service.getUsuariosEvento(e.getIdEvento());
        String[][] datos = new String[usuarios.size()][2] ;
        for(int i=0; i<usuarios.size(); i++){
            datos[i][0] = usuarios.get(i).getNombre();
            datos[i][1] = usuarios.get(i).getEmail();
        }
        DefaultTableModel modelo = new DefaultTableModel(datos, titulos);
        tblUsuarios.setModel(modelo);
    }
    
    class EventosRenderer implements TreeCellRenderer{

        @Override
        public Component getTreeCellRendererComponent(
                JTree tree, 
                Object value, 
                boolean selected, 
                boolean expanded, 
                boolean leaf, 
                int row, 
                boolean hasFocus) {
            JLabel lbl = new JLabel();
            DefaultMutableTreeNode nodo = (DefaultMutableTreeNode) value;
            if (row == 0){
                lbl.setText("Categoria");
                Icon ic = IconFontSwing.buildIcon(FontAwesome.ADDRESS_BOOK, 20);
                lbl.setIcon(ic);
            } else {
                lbl.setText(nodo.getUserObject().toString());
                if (nodo.getUserObject() instanceof Categoria){
                    Categoria c = (Categoria) nodo.getUserObject();
                    switch (c.getIdCategoria()) {
                        case 1:
                            Icon ic = IconFontSwing.buildIcon(FontAwesome.MUSIC, 20);
                            lbl.setIcon(ic);
                            break;
                        case 2:
                            ic = IconFontSwing.buildIcon(FontAwesome.MAP_MARKER, 20);
                            lbl.setIcon(ic);
                            break;
                        case 3:
                            ic = IconFontSwing.buildIcon(FontAwesome.UNIVERSITY, 20);
                            lbl.setIcon(ic);
                            break;
                        default:
                            ic = IconFontSwing.buildIcon(FontAwesome.BRIEFCASE, 20);
                            lbl.setIcon(ic);
                            break;
                    }
                }
            }
            return lbl;
        }
        
    }
}
